name: Deploy with docker

on:
  push:
    branches: [ main ]

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Set up JDK 8
        uses: actions/setup-java@v4.2.2
        with:
          java-version: '8'
          distribution: 'adopt'
      # maven缓存，不加的话每次都会去重新拉取，会影响速度
      - name: Dependencies Cache
        uses: actions/cache@v4.0.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      # 编译打包
      - name: Build with Maven
        run: mvn package -Dmaven.test.skip=true
      # 登录Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.6.1
      # build 镜像并push到中央仓库中
      - name: Build and push coj-code-sandbox
        id: docker_build_coj-code-sandbox
        uses: docker/build-push-action@v6.7.0
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/coj-code-sandbox
      # push后，用ssh连接服务器执行脚本
      - name: SSH
        uses: fifsky/ssh-action@master
        with:
          command: |
            docker rm -f coj-code-sanbox
            docker rmi  ${{ secrets.DOCKER_HUB_USERNAME }}/coj-code-sandbox:latest
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/coj-code-sandbox:latest
            docker run -d --name coj-code-sanbox --network coj_mynetwork -p 8090:8090 ${{ secrets.DOCKER_HUB_USERNAME }}/coj-code-sandbox:latest
          user: "root"
          host: ${{ secrets.REMOTE_HOST }}
          key: ${{ secrets.PRIVATE_KEY}}